name: All Builds (Linux, macOS, Windows, Android, IPA, APK, AAB)

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  BUILD_VERSION: 1.0.${{ github.run_number }}
  BUILD_NUMBER: ${{ github.run_number }}
  PYTHON_VERSION: 3.11
  FLUTTER_VERSION: 3.24.0

permissions:
  contents: write
  actions: read

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.BUILD_VERSION }}-${{ env.BUILD_NUMBER }}
          release_name: Release ${{ env.BUILD_VERSION }} (Build ${{ env.BUILD_NUMBER }})
          draft: false
          prerelease: false

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Patch for linux build
        run: |
          flutter doctor
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
          flutter doctor

      - name: Flet Build Linux
        run: |
          flutter config --no-analytics
          flet build linux --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

      - name: List Build Directory Contents
        run: |
          ls -R build/ || Get-ChildItem -Recurse build/

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/linux -name "app" -type f | head -n 1)
          asset_name: app-linux-${{ env.BUILD_VERSION }}
          asset_content_type: application/x-executable

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Flet Build macOS
        run: |
          flutter config --no-analytics
          flet build macos --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

      - name: List Build Directory Contents
        run: |
          ls -R build/ || Get-ChildItem -Recurse build/

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/macos/Build/Products/Release -name "*.app" | head -n 1)
          asset_name: app-macos-${{ env.BUILD_VERSION }}.app
          asset_content_type: application/octet-stream

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Flet Build Windows
        run: |
          flutter config --no-analytics
          flet build windows --verbose --no-rich-output --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

      - name: List Build Directory Contents
        run: |
          ls -R build/ || Get-ChildItem -Recurse build/

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/windows/x64/runner/Release -name "*.exe" | head -n 1)
          asset_name: app-windows-${{ env.BUILD_VERSION }}.exe
          asset_content_type: application/octet-stream

  build-aab:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Flet Build AAB
        run: |
          flutter config --no-analytics
          flet build aab --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

      - name: List Build Directory Contents
        run: |
          ls -R build/ || Get-ChildItem -Recurse build/

      - name: Upload AAB Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/aab -name "*.aab" | head -n 1)
          asset_name: app-${{ env.BUILD_VERSION }}.aab
          asset_content_type: application/octet-stream

  build-apk:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Flet Build APK
        run: |
          flutter config --no-analytics
          flet build apk --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

      - name: List Build Directory Contents
        run: |
          ls -R build/ || Get-ChildItem -Recurse build/

      - name: Upload APK Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/apk -name "*.apk" | head -n 1)
          asset_name: app-${{ env.BUILD_VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive

  build-ipa:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Flet Build IPA
        run: |
          flutter config --no-analytics
          flet build ipa --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

      - name: List Build Directory Contents
        run: |
          ls -R build/ || Get-ChildItem -Recurse build/

      - name: Upload IPA Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/ipa -name "*.ipa" | head -n 1)
          asset_name: app-${{ env.BUILD_VERSION }}.ipa
          asset_content_type: application/octet-stream
