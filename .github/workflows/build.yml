name: Cross-Platform Builds & Release

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: write

env:
  BUILD_VERSION: 1.0.${{ github.run_number }}
  BUILD_NUMBER: ${{ github.run_number }}
  PYTHON_VERSION: 3.11
  FLUTTER_VERSION: 3.24.0

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.BUILD_VERSION }}
          release_name: Release ${{ env.BUILD_VERSION }}
          draft: false
          prerelease: false

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Build for Linux
        run: flet build linux --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}

      - name: List Build Directory
        run: ls -R build/

      - name: Upload Linux Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/linux -name "app" -type f | head -n 1)
          asset_name: app-linux-${{ env.BUILD_VERSION }}
          asset_content_type: application/x-executable

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Build for Windows
        run: flet build windows --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}

      - name: List Build Directory
        run: Get-ChildItem -Recurse build/

      - name: Upload Windows Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(Get-ChildItem -Recurse -Path build/windows/x64/runner/Release -Filter app.exe | Select-Object -ExpandProperty FullName)
          asset_name: app-windows-${{ env.BUILD_VERSION }}.exe
          asset_content_type: application/octet-stream

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Build for macOS
        run: flet build macos --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}

      - name: List Build Directory
        run: ls -R build/

      - name: Upload macOS Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/macos -name "*.app" -type d | head -n 1)
          asset_name: app-macos-${{ env.BUILD_VERSION }}.zip
          asset_content_type: application/zip

  build-android:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Build APK and AAB
        run: |
          flet build apk --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}
          flet build appbundle --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}

      - name: List Build Directory
        run: ls -R build/

      - name: Upload APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/app/outputs/flutter-apk -name "*.apk" -type f | head -n 1)
          asset_name: app-android-${{ env.BUILD_VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload AAB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/app/outputs/bundle/release -name "*.aab" -type f | head -n 1)
          asset_name: app-android-${{ env.BUILD_VERSION }}.aab
          asset_content_type: application/octet-stream

  build-ipa:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Build IPA
        run: flet build ipa --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}

      - name: List Build Directory
        run: ls -R build/

      - name: Upload IPA Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: $(find ./build/ios/ipa -name "Runner.ipa" -type f | head -n 1)
          asset_name: app-ios-${{ env.BUILD_VERSION }}.ipa
          asset_content_type: application/octet-stream
